name: Deploy and Release on Merge

on:
  pull_request:
    branches: [release]
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  # JOB 1: Deploy to your server
  deploy:
    name: 'Deploy to Production'
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Run Deployment Steps'
        run: |
          echo "ðŸš€ Simulating deployment to EC2..."
          echo "âœ… Deployment successful!"

  # JOB 2: Create the GitHub Release (only if deployment succeeded)
  create-release:
    name: 'Create GitHub Release'
    needs: deploy # This ensures deployment runs first
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code with full history'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Run Release Please'
        id: release
        # We use this simpler action for this direct "no-PR" flow
        uses: googleapis/release-please-action@v4
        with:
          # This tells the action to create the release directly
          skip-github-pull-request: true
          
          # Use your Personal Access Token for the most reliable results
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          
          release-type: node # Or 'simple'

      - name: 'Output Release Information'
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "ðŸŽ‰ New release created!"
          echo "Tag: ${{ steps.release.outputs.tag_name }}"
          echo "URL: ${{ steps.release.outputs.html_url }}"