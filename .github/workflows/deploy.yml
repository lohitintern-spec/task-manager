# .github/workflows/deploy.yml

name: Deploy Task Manager to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Deploy and run on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Source nvm to get node, npm, and npx into the PATH
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            
            # Create a directory for the app if it doesn't exist
            mkdir -p /home/ubuntu/task-manager
            
            # Securely copy files from the GitHub runner to the server
            rsync -avz --exclude 'node_modules' --delete . /home/ubuntu/task-manager
            
            # Now that the files are transferred, execute the rest of the deployment script
            cd /home/ubuntu/task-manager
            
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            
            # Re-install pm2 just in case
            npm install pm2 -g
            
            # Now install production dependencies and run the app
            npm install --production
            
            npx prisma migrate deploy
            
            pm2 start "npm start" --name "task-manager" --update-env || pm2 restart task-manager
    