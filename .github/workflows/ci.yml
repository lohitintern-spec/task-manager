name: CI Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # UNCOMMENT THIS STEP to build your actual image
      # - name: Build and Tag the Docker Image
      #   id: build
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_USERNAME }}/task-manager:latest .
      #     docker tag ${{ secrets.DOCKER_USERNAME }}/task-manager:latest ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.sha }}

      - name: Scan image with Trivy
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.18.0 
        with:
          image-ref: 'owasp/juice-shop:v12.0.0'
          severity: 'HIGH,CRITICAL'
          exit-code: 1 # This will make the step fail if HIGH or CRITICAL vulns are found
          format: 'table'
          output: 'trivy-report.txt' # Save the report to a file
        # THIS IS THE KEY: It allows the workflow to continue even if this step fails.
        continue-on-error: true

      - name: Send Email Alert and Fail on Vulnerability
        # This 'if' condition checks the *outcome* of the previous step.
        if: steps.trivy_scan.outcome == 'failure'
        run: |
          # You can combine the email and failure logic into one step
          # Or keep them separate if you prefer.
          
          # First, prepare the email body with the report
          REPORT_BODY=$(cat trivy-report.txt)
          
          # For multiline strings in the next step, we need to format it
          REPORT_BODY="${REPORT_BODY//'%'/'%25'}"
          REPORT_BODY="${REPORT_BODY//$'\n'/'%0A'}"
          REPORT_BODY="${REPORT_BODY//$'\r'/'%0D'}"
          echo "REPORT_FOR_EMAIL=$REPORT_BODY" >> $GITHUB_ENV
          
          # Now, you would call your email action here.
          # For demonstration, I am just showing the logic.
          echo "::warning::Vulnerabilities found! Sending email alert..."
          # --- ADD YOUR dawidd6/action-send-mail@v3 ACTION HERE ---
          # You can pass ${{ env.REPORT_FOR_EMAIL }} into the body of the email.
          
          echo "Failing pipeline due to critical vulnerabilities."
          exit 1

      - name: Push the Docker Image to Docker Hub
        # This 'if' condition checks that the scan step succeeded.
        if: steps.trivy_scan.outcome == 'success'
        run: |
          echo "No critical vulnerabilities found. Pushing image..."
          docker push ${{ secrets.DOCKER_USERNAME }}/task-manager:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.sha }}