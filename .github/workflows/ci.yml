name: CI Pipeline

on:
  push:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: task-manager
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Build the Docker Image Locally (without pushing)
      - name: Build and Tag the Docker Image Locally
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          load: true # This makes the image available for the next step (Trivy scan)

      # Step 2: Scan the locally built image with Trivy
      - name: Scan image with Trivy
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.18.0 
        with:
          image-ref: '${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest'
          severity: 'CRITICAL'
          exit-code: 1 
          continue-on-error: true

      - name: Send Email Alert on Vulnerability
        if: steps.trivy_scan.outcome == 'failure'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com 
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: 'CRITICAL VULNERABILITIES FOUND in ${{ github.repository }}'
          body: |
            The Trivy scan has found vulnerabilities in your Docker image.
            
            The pipeline will now FAIL and the image will NOT be pushed.
            
            Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: 'lohit.intern@gmail.com'
          from: 'GitHub Actions'

      - name: Fail the Pipeline if vulnerabilities found
        if: steps.trivy_scan.outcome == 'failure'
        run: |
          echo "Failing pipeline due to critical vulnerabilities."
          exit 1

      # Step 3: Conditionally push the image ONLY if the scan passed
      - name: Push the Docker Image to ECR
        if: steps.trivy_scan.outcome == 'success'
        run: |
          echo "No critical vulnerabilities found. Pushing image..."
          
          # The fix: We log in to ECR directly before the push to ensure credentials are fresh.
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
          
          # Now, push the image
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}