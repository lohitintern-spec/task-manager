name: Release Please Workflow

on:
  pull_request:
    branches: [release]
    types: [closed]

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  # JOB 1: Deploy to EC2 when code is pushed/merged to release
  deploy:
    name: 'Deploy to Production'
    if: |
      (github.event_name == 'push') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Release Branch'
        uses: actions/checkout@v4
        
      - name: 'Deploy to EC2'
        run: |
          echo "üöÄ Deploying to Production EC2..."
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "‚úÖ Production deployment complete!"

  # JOB 2: Release Please - Create/Update Release PR
  release-please:
    name: 'Release Please'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 'Run Release Please'
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          # package-name: task-manager

      - name: 'Show Release Please Results'
        run: |
          echo "üìÑ Release Please Results:"
          echo "Release created: ${{ steps.release.outputs.release_created }}"
          echo "Tag name: ${{ steps.release.outputs.tag_name }}"
          echo "Release URL: ${{ steps.release.outputs.html_url }}"
          echo "PR created: ${{ steps.release.outputs.pr }}"
          
          if [[ "${{ steps.release.outputs.release_created }}" == "true" ]]; then
            echo "üéâ GitHub Release created: ${{ steps.release.outputs.html_url }}"
          elif [[ -n "${{ steps.release.outputs.pr }}" ]]; then
            echo "üìã Release PR created/updated. You can review and merge it."
          else
            echo "‚ÑπÔ∏è No release PR needed (no conventional commits since last release)"
          fi

  # JOB 3: Cleanup any extra branches created by release-please
  cleanup:
    name: 'Cleanup Extra Branches'
    needs: [release-please]
    if: always() && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 'Delete Old Release Please Branches'
        run: |
          echo "üßπ Cleaning up old release-please branches..."
          
          # Find and delete old release-please branches (keep only the most recent one if it exists)
          git branch -r | grep 'origin/release-please--' | head -n -1 | sed 's/origin\///' | while read branch; do
            if [ ! -z "$branch" ]; then
              echo "Deleting old branch: $branch"
              git push origin --delete "$branch" || echo "Branch $branch already deleted or doesn't exist"
            fi
          done
          
          echo "‚úÖ Cleanup complete!"
